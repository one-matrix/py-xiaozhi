import{_ as a,c as i,o as t,ae as l}from"./chunks/framework.BGWP4WZ_.js";const s="/py-xiaozhi/assets/logo.BmhuZ12h.png",g=JSON.parse('{"title":"IntelliConnect","description":"基于SpringBoot的智能物联网平台，集成Agent智能体技术的IoT解决方案","frontmatter":{"title":"IntelliConnect","description":"基于SpringBoot的智能物联网平台，集成Agent智能体技术的IoT解决方案"},"headers":[],"relativePath":"ecosystem/projects/intelliconnect/index.md","filePath":"ecosystem/projects/intelliconnect/index.md"}'),n={name:"ecosystem/projects/intelliconnect/index.md"};function r(o,e,h,c,p,d){return t(),i("div",null,e[0]||(e[0]=[l('<h1 id="intelliconnect" tabindex="-1">IntelliConnect <a class="header-anchor" href="#intelliconnect" aria-label="Permalink to &quot;IntelliConnect&quot;">​</a></h1><div class="project-header"><div class="project-logo"><img src="'+s+`" alt="IntelliConnect Logo"></div><div class="project-badges"><span class="badge platform">跨平台</span><span class="badge language">Java/Spring</span><span class="badge status">v0.1</span></div></div><div class="ascii-art"><pre>██╗ ███╗   ██╗ ████████╗ ███████╗ ██╗      ██╗      ██╗    ██████╗  ██████╗  ███╗   ██╗ ███╗   ██╗ ███████╗  ██████╗ ████████╗
██║ ████╗  ██║ ╚══██╔══╝ ██╔════╝ ██║      ██║      ██║   ██╔════╝ ██╔═══██╗ ████╗  ██║ ████╗  ██║ ██╔════╝ ██╔════╝ ╚══██╔══╝
██║ ██╔██╗ ██║    ██║    █████╗   ██║      ██║      ██║   ██║      ██║   ██║ ██╔██╗ ██║ ██╔██╗ ██║ █████╗   ██║         ██║   
██║ ██║╚██╗██║    ██║    ██╔══╝   ██║      ██║      ██║   ██║      ██║   ██║ ██║╚██╗██║ ██║╚██╗██║ ██╔══╝   ██║         ██║   
██║ ██║ ╚████║    ██║    ███████╗ ███████╗ ███████╗ ██║   ╚██████╗ ╚██████╔╝ ██║ ╚████║ ██║ ╚████║ ███████╗ ╚██████╗    ██║   
╚═╝ ╚═╝  ╚═══╝    ╚═╝    ╚══════╝ ╚══════╝ ╚══════╝ ╚═╝    ╚═════╝  ╚═════╝  ╚═╝  ╚═══╝ ╚═╝  ╚═══╝ ╚══════╝  ╚═════╝    ╚═╝   
</pre><p class="ascii-caption">Built by RSLLY</p></div><div class="project-badges-center"><img src="https://img.shields.io/badge/license-apache2.0-yellow?style=flat-square" alt="License"><img src="https://img.shields.io/badge/release-v0.1-blue?style=flat-square" alt="Release"><img src="https://img.shields.io/badge/cwl-project1.8-green?style=flat-square" alt="CWL Project"></div><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><ul><li>本项目基于springboot2.7开发，使用spring security作为安全框架</li><li>配备物模型(属性，功能和事件模块)和完善的监控模块</li><li>支持多种大模型和先进的Agent智能体技术提供出色的AI智能，可以快速搭建智能物联网应用(首个基于Agent智能体设计的物联网平台)</li><li>支持快速构建智能语音应用，支持语音识别和语音合成</li><li>支持多种iot协议，使用emqx exhook作为mqtt通讯，可扩展性强</li><li>支持OTA空中升级技术</li><li>支持微信小程序和微信服务号</li><li>支持小智AI硬件</li><li>使用常见的mysql和redis数据库，上手简单</li><li>支持时序数据库influxdb</li></ul><h2 id="安装运行" tabindex="-1">安装运行 <a class="header-anchor" href="#安装运行" aria-label="Permalink to &quot;安装运行&quot;">​</a></h2><div class="notice"><p>推荐使用docker安装，docker-compose.yaml文件在docker目录下，执行 docker-compose up 可初始化mysql,redis,emqx和influxdb环境，安装详情请看官方文档。</p></div><ul><li>安装mysql和redis数据库，高性能运行推荐安装时序数据库influxdb</li><li>安装EMQX集群,并配置好exhook，本项目使用exhook作为mqtt消息的处理器</li><li>安装java17环境</li><li>修改配置文件application.yaml(设置ddl-auto为update模式)</li><li>java -jar IntelliConnect-1.8-SNAPSHOT.jar</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/ruanrongman/IntelliConnect</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> intelliconnect/docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动所需环境（MySQL, Redis, EMQX, InfluxDB）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h2 id="项目特色" tabindex="-1">项目特色 <a class="header-anchor" href="#项目特色" aria-label="Permalink to &quot;项目特色&quot;">​</a></h2><ul><li>极简主义，层次分明，符合mvc分层结构</li><li>完善的物模型抽象，使得iot开发者可以专注于业务本身</li><li>AI能力丰富，支持Agent智能体技术，快速开发AI智能应用</li></ul><h2 id="小智-esp-32-后端服务-xiaozhi-esp32-server" tabindex="-1">小智 ESP-32 后端服务(xiaozhi-esp32-server) <a class="header-anchor" href="#小智-esp-32-后端服务-xiaozhi-esp32-server" aria-label="Permalink to &quot;小智 ESP-32 后端服务(xiaozhi-esp32-server)&quot;">​</a></h2><div class="esp32-section"><p>本项目能够为开源智能硬件项目 <a href="https://github.com/78/xiaozhi-esp32" target="_blank">xiaozhi-esp32</a> 提供后端服务。根据 <a href="https://ccnphfhqs21z.feishu.cn/wiki/M0XiwldO9iJwHikpXD5cEx71nKh" target="_blank">小智通信协议</a> 使用 <code>Java</code> 实现。</p><p>适合希望本地部署的用户，不同于单纯语音交互，本项目重点在于提供更强大的物联网和智能体能力。</p></div><h2 id="项目文档和视频演示" tabindex="-1">项目文档和视频演示 <a class="header-anchor" href="#项目文档和视频演示" aria-label="Permalink to &quot;项目文档和视频演示&quot;">​</a></h2><ul><li>项目文档和视频演示地址：<a href="https://ruanrongman.github.io/IntelliConnect/" target="_blank" rel="noreferrer">https://ruanrongman.github.io/IntelliConnect/</a></li><li>技术博客地址：<a href="https://wordpress.rslly.top" target="_blank" rel="noreferrer">https://wordpress.rslly.top</a></li><li>社区地址：<a href="https://github.com/cwliot" target="_blank" rel="noreferrer">https://github.com/cwliot</a></li><li>创万联社区公众号：微信直接搜索创万联</li></ul><h2 id="相关项目和社区" tabindex="-1">相关项目和社区 <a class="header-anchor" href="#相关项目和社区" aria-label="Permalink to &quot;相关项目和社区&quot;">​</a></h2><ul><li><strong>创万联(cwl)</strong>: 专注于物联网和人工智能技术的开源社区。</li><li><strong>Promptulate</strong>: <a href="https://github.com/Undertone0809/promptulate" target="_blank" rel="noreferrer">https://github.com/Undertone0809/promptulate</a> - A LLM application and Agent development framework.</li><li><strong>Rymcu</strong>: <a href="https://github.com/rymcu" target="_blank" rel="noreferrer">https://github.com/rymcu</a> - 为数百万人服务的开源嵌入式知识学习交流平台</li></ul><h2 id="致谢" tabindex="-1">致谢 <a class="header-anchor" href="#致谢" aria-label="Permalink to &quot;致谢&quot;">​</a></h2><ul><li>感谢项目<a href="https://github.com/78/xiaozhi-esp32" target="_blank" rel="noreferrer">xiaozhi-esp32</a>提供强大的硬件语音交互。</li><li>感谢项目<a href="https://github.com/lostromb/concentus" target="_blank" rel="noreferrer">Concentus: Opus for Everyone</a>提供opus解码和编码。</li><li>感谢项目<a href="https://github.com/big-mouth-cn/talkx" target="_blank" rel="noreferrer">TalkX</a>提供了opus解码和编码的参考。</li><li>感谢项目<a href="https://github.com/huangjunsen0406/py-xiaozhi" target="_blank" rel="noreferrer">py-xiaozhi</a>方便项目进行小智开发调试。</li></ul><h2 id="贡献" tabindex="-1">贡献 <a class="header-anchor" href="#贡献" aria-label="Permalink to &quot;贡献&quot;">​</a></h2><p>本人正在尝试一些更加完善的抽象模式，支持更多的物联网协议和数据存储形式，如果你有更好的建议，欢迎一起讨论交流。</p>`,22)]))}const m=a(n,[["render",r]]);export{g as __pageData,m as default};
