import{_ as t,c as i,o as l,ae as s}from"./chunks/framework.BGWP4WZ_.js";const d=JSON.parse('{"title":"Home Assistant MCP 集成","description":"","frontmatter":{},"headers":[],"relativePath":"mcp/ha.md","filePath":"mcp/ha.md"}'),e={name:"mcp/ha.md"};function o(n,a,r,h,u,c){return l(),i("div",null,a[0]||(a[0]=[s(`<h1 id="home-assistant-mcp-集成" tabindex="-1">Home Assistant MCP 集成 <a class="header-anchor" href="#home-assistant-mcp-集成" aria-label="Permalink to &quot;Home Assistant MCP 集成&quot;">​</a></h1><p>为提升架构灵活性与稳定性，py-xiaozhi 已移除内置的 Home Assistant（HA）。现可通过基于 WSS 的 Home Assistant MCP 外挂插件接入 HA，与小智 AI 服务器通过 MCP 协议直连，无需任何中转。该插件由 c1pher-cn 开源维护，完整支持设备状态查询、实体控制与自动化管理。</p><p>项目地址：<a href="https://github.com/c1pher-cn/ha-mcp-for-xiaozhi" target="_blank" rel="noreferrer">ha-mcp-for-xiaozhi</a></p><h2 id="插件特性" tabindex="-1">插件特性 <a class="header-anchor" href="#插件特性" aria-label="Permalink to &quot;插件特性&quot;">​</a></h2><h3 id="核心能力" tabindex="-1">核心能力 <a class="header-anchor" href="#核心能力" aria-label="Permalink to &quot;核心能力&quot;">​</a></h3><ol><li><strong>直连小智服务器</strong>: Home Assistant 作为 MCP server，通过 WebSocket 协议直接对接小智服务器，无需中转</li><li><strong>多API组代理</strong>: 在一个实体中同时选择多个API组（Home Assistant 自带控制API、用户自定义MCP Server）</li><li><strong>多实体支持</strong>: 支持同时配置多个实体实例</li><li><strong>HACS集成</strong>: 通过 HACS 商店一键安装，方便管理和更新</li></ol><h3 id="技术优势" tabindex="-1">技术优势 <a class="header-anchor" href="#技术优势" aria-label="Permalink to &quot;技术优势&quot;">​</a></h3><ul><li><strong>低延迟</strong>: 直连架构，减少网络中转延迟</li><li><strong>高可靠</strong>: 基于WebSocket长连接，稳定性更佳</li><li><strong>易扩展</strong>: 支持代理其他MCP Server，扩展性强</li><li><strong>易维护</strong>: HACS管理，自动更新</li></ul><h2 id="常见使用场景" tabindex="-1">常见使用场景 <a class="header-anchor" href="#常见使用场景" aria-label="Permalink to &quot;常见使用场景&quot;">​</a></h2><p><strong>设备状态查询:</strong></p><ul><li>&quot;客厅灯现在是什么状态&quot;</li><li>&quot;查看所有灯的状态&quot;</li><li>&quot;温度传感器显示多少度&quot;</li><li>&quot;空调现在开着吗&quot;</li></ul><p><strong>设备控制:</strong></p><ul><li>&quot;打开客厅灯&quot;</li><li>&quot;关闭所有灯&quot;</li><li>&quot;把空调温度设置到25度&quot;</li><li>&quot;调节客厅灯亮度到80%&quot;</li></ul><p><strong>场景控制:</strong></p><ul><li>&quot;开启睡眠模式&quot;</li><li>&quot;激活回家场景&quot;</li><li>&quot;执行晚安场景&quot;</li><li>&quot;启动派对模式&quot;</li></ul><p><strong>高级控制:</strong></p><ul><li>&quot;通过script控制电视&quot;</li><li>&quot;执行自定义自动化&quot;</li><li>&quot;控制多媒体设备&quot;</li><li>&quot;管理安防系统&quot;</li></ul><h2 id="安装指南" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南" aria-label="Permalink to &quot;安装指南&quot;">​</a></h2><h3 id="前置要求" tabindex="-1">前置要求 <a class="header-anchor" href="#前置要求" aria-label="Permalink to &quot;前置要求&quot;">​</a></h3><ul><li>Home Assistant 已安装并运行</li><li>已安装 HACS（Home Assistant Community Store）</li><li>小智AI账号及MCP接入点地址</li></ul><h3 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h3><h4 id="_1-通过hacs安装" tabindex="-1">1. 通过HACS安装 <a class="header-anchor" href="#_1-通过hacs安装" aria-label="Permalink to &quot;1. 通过HACS安装&quot;">​</a></h4><ol><li>打开 HACS，搜索 <code>xiaozhi</code> 或 <code>ha-mcp-for-xiaozhi</code></li></ol><img width="700" alt="HACS搜索界面" src="https://github.com/user-attachments/assets/fa49ee7c-b503-49fa-ad63-512499fa3885"><ol start="2"><li>点击下载并安装插件</li></ol><img width="500" alt="插件下载界面" src="https://github.com/user-attachments/assets/1ee75d6f-e1b0-4073-a2c7-ee0d72d002ca"><ol start="3"><li>重启 Home Assistant</li></ol><h4 id="_2-手动安装" tabindex="-1">2. 手动安装 <a class="header-anchor" href="#_2-手动安装" aria-label="Permalink to &quot;2. 手动安装&quot;">​</a></h4><p>如果无法通过HACS安装，可以手动下载：</p><ol><li>从 <a href="https://github.com/c1pher-cn/ha-mcp-for-xiaozhi/releases" target="_blank" rel="noreferrer">GitHub Releases</a> 下载最新版本</li><li>解压到 <code>custom_components</code> 目录</li><li>重启 Home Assistant</li></ol><h3 id="配置步骤" tabindex="-1">配置步骤 <a class="header-anchor" href="#配置步骤" aria-label="Permalink to &quot;配置步骤&quot;">​</a></h3><h4 id="_1-添加集成" tabindex="-1">1. 添加集成 <a class="header-anchor" href="#_1-添加集成" aria-label="Permalink to &quot;1. 添加集成&quot;">​</a></h4><ol><li>进入 <strong>设置 &gt; 设备与服务 &gt; 添加集成</strong></li><li>搜索 &quot;Mcp&quot; 或 &quot;MCP Server for Xiaozhi&quot;</li></ol><img width="600" alt="添加集成界面" src="https://github.com/user-attachments/assets/07a70fe1-8c6e-4679-84df-1ea05114b271"><ol start="3"><li>选择并点击添加</li></ol><h4 id="_2-配置参数" tabindex="-1">2. 配置参数 <a class="header-anchor" href="#_2-配置参数" aria-label="Permalink to &quot;2. 配置参数&quot;">​</a></h4><p>配置界面需要填写以下信息：</p><p><strong>基本配置:</strong></p><ul><li><strong>小智MCP接入点地址</strong>: 从小智AI后台获取的MCP接入地址</li><li><strong>设备名称</strong>: 为该Home Assistant实例设置一个识别名称</li></ul><p><strong>API组选择:</strong></p><ul><li><strong>Assist</strong>: Home Assistant自带的控制功能</li><li><strong>其他MCP Server</strong>: 如果你在Home Assistant中配置了其他MCP服务器，可以选择一并代理给小智</li></ul><img width="600" alt="配置界面" src="https://github.com/user-attachments/assets/38e98fde-8a6c-4434-932c-840c25dc6e28"><h4 id="_3-实体公开设置" tabindex="-1">3. 实体公开设置 <a class="header-anchor" href="#_3-实体公开设置" aria-label="Permalink to &quot;3. 实体公开设置&quot;">​</a></h4><p>为了让小智能够控制设备，需要公开相应实体：</p><ol><li>进入 <strong>设置 &gt; 语音助手 &gt; 公开</strong></li><li>选择需要被小智控制的设备和实体</li><li>保存设置</li></ol><h4 id="_4-验证连接" tabindex="-1">4. 验证连接 <a class="header-anchor" href="#_4-验证连接" aria-label="Permalink to &quot;4. 验证连接&quot;">​</a></h4><ol><li>配置完成后等待约1分钟</li><li>登录小智AI后台，进入MCP接入点页面</li><li>点击刷新，检查连接状态是否正常</li></ol><img width="600" alt="连接状态检查" src="https://github.com/user-attachments/assets/ace79a44-6197-4e94-8c49-ab9048ed4502"><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="基础设备控制" tabindex="-1">基础设备控制 <a class="header-anchor" href="#基础设备控制" aria-label="Permalink to &quot;基础设备控制&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>用户: &quot;打开客厅灯&quot;</span></span>
<span class="line"><span>小智: &quot;好的，已为您打开客厅灯&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>用户: &quot;把空调温度调到26度&quot;  </span></span>
<span class="line"><span>小智: &quot;已将空调温度设置为26度&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>用户: &quot;关闭所有灯&quot;</span></span>
<span class="line"><span>小智: &quot;已为您关闭所有灯光&quot;</span></span></code></pre></div><h3 id="状态查询" tabindex="-1">状态查询 <a class="header-anchor" href="#状态查询" aria-label="Permalink to &quot;状态查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>用户: &quot;客厅现在的温度是多少&quot;</span></span>
<span class="line"><span>小智: &quot;客厅温度传感器显示当前温度为23.5度&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>用户: &quot;哪些灯现在是开着的&quot;</span></span>
<span class="line"><span>小智: &quot;目前开启的灯有：客厅灯、卧室床头灯&quot;</span></span></code></pre></div><h3 id="场景控制" tabindex="-1">场景控制 <a class="header-anchor" href="#场景控制" aria-label="Permalink to &quot;场景控制&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>用户: &quot;执行睡眠模式&quot;</span></span>
<span class="line"><span>小智: &quot;已为您执行睡眠模式场景，所有灯光已关闭，窗帘已拉上&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>用户: &quot;开启回家场景&quot;  </span></span>
<span class="line"><span>小智: &quot;欢迎回家！已为您开启客厅灯和玄关灯，空调已调至舒适温度&quot;</span></span></code></pre></div><h2 id="调试说明" tabindex="-1">调试说明 <a class="header-anchor" href="#调试说明" aria-label="Permalink to &quot;调试说明&quot;">​</a></h2><h3 id="_1-实体暴露检查" tabindex="-1">1. 实体暴露检查 <a class="header-anchor" href="#_1-实体暴露检查" aria-label="Permalink to &quot;1. 实体暴露检查&quot;">​</a></h3><p>暴露的工具数量取决于您公开给Home Assistant语音助手的实体种类：</p><ul><li>进入 <strong>设置 &gt; 语音助手 &gt; 公开</strong></li><li>确保需要控制的设备已添加到公开列表</li></ul><h3 id="_2-版本要求" tabindex="-1">2. 版本要求 <a class="header-anchor" href="#_2-版本要求" aria-label="Permalink to &quot;2. 版本要求&quot;">​</a></h3><p>建议使用最新版本的Home Assistant：</p><ul><li>新版本提供的工具和API更加完善</li><li>5月版本相比3月版本在工具支持上有明显改进</li></ul><h3 id="_3-调试方法" tabindex="-1">3. 调试方法 <a class="header-anchor" href="#_3-调试方法" aria-label="Permalink to &quot;3. 调试方法&quot;">​</a></h3><p>当控制效果未达到预期时：</p><p><strong>查看小智聊天记录:</strong></p><ol><li>检查小智如何理解和处理指令</li><li>确认是否调用了Home Assistant工具</li><li>分析调用参数是否正确</li></ol><p><strong>已知问题:</strong></p><ul><li>灯光控制可能与内置屏幕控制冲突</li><li>音乐控制可能与内置音乐功能冲突</li><li>这些问题将在下个月小智服务器支持内置工具选择后解决</li></ul><h3 id="_4-调试日志" tabindex="-1">4. 调试日志 <a class="header-anchor" href="#_4-调试日志" aria-label="Permalink to &quot;4. 调试日志&quot;">​</a></h3><p>如果Home Assistant function调用正确但执行异常：</p><ol><li>在Home Assistant中开启本插件的调试日志</li><li>重现问题操作</li><li>查看日志中的详细执行情况</li></ol><h2 id="演示视频" tabindex="-1">演示视频 <a class="header-anchor" href="#演示视频" aria-label="Permalink to &quot;演示视频&quot;">​</a></h2><p>为了更好地了解插件功能，可以观看以下演示视频：</p><ul><li><a href="https://www.bilibili.com/video/BV1XdjJzeEwe" target="_blank" rel="noreferrer">接入演示视频</a> - 基础安装和配置流程</li><li><a href="https://www.bilibili.com/video/BV18DM8zuEYV" target="_blank" rel="noreferrer">控制电视演示</a> - 通过自定义script实现电视控制</li><li><a href="https://www.bilibili.com/video/BV1SruXzqEW5" target="_blank" rel="noreferrer">进阶教程</a> - Home Assistant、LLM、MCP、小智的详细教程</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><p><strong>1. 连接失败</strong></p><ul><li>检查小智MCP接入点地址是否正确</li><li>确认Home Assistant网络连接正常</li><li>检查防火墙设置</li></ul><p><strong>2. 设备无法控制</strong></p><ul><li>确认设备已在语音助手中公开</li><li>检查设备实体状态是否正常</li><li>验证设备是否支持相应操作</li></ul><p><strong>3. 部分功能冲突</strong></p><ul><li>临时禁用内置功能</li><li>调整设备命名避免冲突</li><li>等待小智服务器工具选择功能更新</li></ul><p><strong>4. 响应延迟</strong></p><ul><li>检查网络连接质量</li><li>优化Home Assistant性能</li><li>减少不必要的实体公开</li></ul><h3 id="调试技巧" tabindex="-1">调试技巧 <a class="header-anchor" href="#调试技巧" aria-label="Permalink to &quot;调试技巧&quot;">​</a></h3><ol><li>启用详细日志记录</li><li>逐步测试基础功能</li><li>对比正常工作的设备配置</li><li>参考社区讨论和issues</li></ol><h2 id="社区支持" tabindex="-1">社区支持 <a class="header-anchor" href="#社区支持" aria-label="Permalink to &quot;社区支持&quot;">​</a></h2><h3 id="项目链接" tabindex="-1">项目链接 <a class="header-anchor" href="#项目链接" aria-label="Permalink to &quot;项目链接&quot;">​</a></h3><ul><li><strong>GitHub仓库</strong>: <a href="https://github.com/c1pher-cn/ha-mcp-for-xiaozhi" target="_blank" rel="noreferrer">ha-mcp-for-xiaozhi</a></li><li><strong>问题反馈</strong>: <a href="https://github.com/c1pher-cn/ha-mcp-for-xiaozhi/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li><li><strong>功能请求</strong>: <a href="https://github.com/c1pher-cn/ha-mcp-for-xiaozhi/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a></li></ul>`,89)]))}const q=t(e,[["render",o]]);export{d as __pageData,q as default};
