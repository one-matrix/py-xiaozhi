import{_ as i,c as a,o as n,ae as l}from"./chunks/framework.BGWP4WZ_.js";const t="/py-xiaozhi/assets/%E7%B3%BB%E7%BB%9F%E7%95%8C%E9%9D%A2.BTrv6wsS.png",c=JSON.parse('{"title":"语音交互模式说明","description":"","frontmatter":{},"headers":[],"relativePath":"guide/语音交互模式说明.md","filePath":"guide/语音交互模式说明.md"}'),p={name:"guide/语音交互模式说明.md"};function e(h,s,o,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l('<h1 id="语音交互模式说明" tabindex="-1">语音交互模式说明 <a class="header-anchor" href="#语音交互模式说明" aria-label="Permalink to &quot;语音交互模式说明&quot;">​</a></h1><p><img src="'+t+`" alt="Image"></p><h2 id="项目概述" tabindex="-1">项目概述 <a class="header-anchor" href="#项目概述" aria-label="Permalink to &quot;项目概述&quot;">​</a></h2><p>py-xiaozhi是一个基于Python开发的AI语音助手客户端，采用现代化的异步架构设计，支持丰富的多模态交互功能。系统集成了语音识别、自然语言处理、视觉识别、IoT设备控制等先进技术，为用户提供智能化的交互体验。</p><h3 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h3><ul><li><strong>多协议支持</strong>: WebSocket/MQTT双协议通信</li><li><strong>MCP工具生态</strong>: 集成10+专业工具模块</li><li><strong>IoT设备集成</strong>: Thing-based架构的设备管理</li><li><strong>视觉识别</strong>: 基于GLM-4V的多模态理解</li><li><strong>音频处理</strong>: Opus编码+WebRTC增强</li><li><strong>全局快捷键</strong>: 系统级交互控制</li></ul><h2 id="语音交互模式" tabindex="-1">语音交互模式 <a class="header-anchor" href="#语音交互模式" aria-label="Permalink to &quot;语音交互模式&quot;">​</a></h2><p>系统提供多种语音交互方式，支持灵活的交互控制和智能语音检测：</p><h3 id="_1-手动按压模式" tabindex="-1">1. 手动按压模式 <a class="header-anchor" href="#_1-手动按压模式" aria-label="Permalink to &quot;1. 手动按压模式&quot;">​</a></h3><ul><li><strong>操作方法</strong>: 按住快捷键期间录音，松开自动发送</li><li><strong>默认快捷键</strong>: <code>Ctrl+J</code> (可在配置中修改)</li><li><strong>适用场景</strong>: 精确控制录音时间，避免环境噪音干扰</li><li><strong>优势特点</strong>: <ul><li>避免误触发录音</li><li>录音时长完全可控</li><li>适合嘈杂环境使用</li></ul></li></ul><h3 id="_2-回合制对话模式-auto-stop" tabindex="-1">2. 回合制对话模式 (AUTO_STOP) <a class="header-anchor" href="#_2-回合制对话模式-auto-stop" aria-label="Permalink to &quot;2. 回合制对话模式 (AUTO_STOP)&quot;">​</a></h3><ul><li><strong>操作方法</strong>: 按下快捷键开启/点击GUI右下角手动对话模式切换自动对话</li><li><strong>默认快捷键</strong>: <code>Ctrl+K</code> (可在配置中修改)</li><li><strong>适用场景</strong>: 安静环境、传统对话交互、AEC功能禁用时</li><li><strong>工作原理</strong>: <ul><li>用户说话 → AI回复 → 用户再次说话</li><li>每次对话需要等待AI回复完成</li><li>避免回声和双方同时说话的冲突</li><li>系统在AI说话时自动禁用麦克风输入</li></ul></li><li><strong>技术特点</strong>: <ul><li>AEC禁用时的默认模式</li><li>适合单向音频设备或有回声问题的环境</li><li>更稳定的对话体验，避免音频冲突</li></ul></li></ul><h3 id="_3-实时对话模式-realtime" tabindex="-1">3. 实时对话模式 (REALTIME) <a class="header-anchor" href="#_3-实时对话模式-realtime" aria-label="Permalink to &quot;3. 实时对话模式 (REALTIME)&quot;">​</a></h3><ul><li><strong>操作方法</strong>: 启用AEC回声消除后自动激活</li><li><strong>配置要求</strong>: <code>&quot;AEC_OPTIONS.ENABLED&quot;: true</code></li><li><strong>适用场景</strong>: 自然对话、双向交互、复杂环境、需要打断AI的场景</li><li><strong>工作原理</strong>: <ul><li>支持AI说话时用户同时打断</li><li>实时双向音频流处理</li><li>智能回声消除，避免扬声器声音干扰麦克风</li><li>麦克风和扬声器可以同时工作</li></ul></li><li><strong>技术特点</strong>: <ul><li>基于SpeexDSP的声学回声消除算法</li><li>实时噪声抑制和音频预处理</li><li>低延迟音频处理流水线（通常&lt;50ms）</li><li>参考信号缓冲和自适应滤波</li><li>支持全双工音频通信</li></ul></li></ul><h3 id="_4-唤醒词模式" tabindex="-1">4. 唤醒词模式 <a class="header-anchor" href="#_4-唤醒词模式" aria-label="Permalink to &quot;4. 唤醒词模式&quot;">​</a></h3><ul><li><strong>操作方法</strong>: 语音说出预设唤醒词激活系统</li><li><strong>默认唤醒词</strong>: &quot;小智&quot;、&quot;小美&quot; (可在配置中自定义)</li><li><strong>模型支持</strong>: 基于Vosk离线语音识别</li><li><strong>配置要求</strong>: 需要下载对应的语音识别模型</li></ul><h3 id="aec自动模式选择" tabindex="-1">AEC自动模式选择 <a class="header-anchor" href="#aec自动模式选择" aria-label="Permalink to &quot;AEC自动模式选择&quot;">​</a></h3><p>系统根据AEC配置自动选择合适的对话模式：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// AEC启用时 - 自动切换到实时对话模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;AEC_OPTIONS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ENABLED&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // → ListeningMode.REALTIME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// AEC禁用时 - 使用回合制对话模式  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;AEC_OPTIONS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ENABLED&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // → ListeningMode.AUTO_STOP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>模式选择逻辑</strong>：</p><ul><li>在 <code>src/application.py:99</code> 中读取AEC配置状态</li><li>根据AEC状态决定默认的<code>listening_mode</code></li><li>AEC启用 = 支持实时双向对话</li><li>AEC禁用 = 使用传统回合制对话</li></ul><h3 id="模式切换与配置" tabindex="-1">模式切换与配置 <a class="header-anchor" href="#模式切换与配置" aria-label="Permalink to &quot;模式切换与配置&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在 config/config.json 中配置快捷键</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;SHORTCUTS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ENABLED&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;MANUAL_PRESS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;modifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;j&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;AUTO_TOGGLE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;modifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;k&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;MODE_TOGGLE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;modifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ctrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><strong>界面显示</strong>: GUI右下角实时显示当前交互模式</li><li><strong>快速切换</strong>: 使用 <code>Ctrl+M</code> 在不同模式间快速切换</li><li><strong>状态指示</strong>: 系统托盘图标颜色反映当前状态</li><li><strong>自动适配</strong>: 系统根据AEC配置自动选择最佳对话模式</li></ul><h2 id="对话控制与系统状态" tabindex="-1">对话控制与系统状态 <a class="header-anchor" href="#对话控制与系统状态" aria-label="Permalink to &quot;对话控制与系统状态&quot;">​</a></h2><h3 id="智能打断功能" tabindex="-1">智能打断功能 <a class="header-anchor" href="#智能打断功能" aria-label="Permalink to &quot;智能打断功能&quot;">​</a></h3><p>当AI正在语音回复时，用户可以随时中断对话：</p><ul><li><strong>快捷键打断</strong>: <code>Ctrl+Q</code> - 立即停止当前AI回复</li><li><strong>GUI操作</strong>: 点击界面上的&quot;中断&quot;按钮</li><li><strong>智能检测</strong>: 系统检测到新的语音输入时自动中断回复</li></ul><h3 id="系统状态管理" tabindex="-1">系统状态管理 <a class="header-anchor" href="#系统状态管理" aria-label="Permalink to &quot;系统状态管理&quot;">​</a></h3><p>系统采用事件驱动的状态机架构，具有以下运行状态：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│                    系统状态流转图                          │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span></span></span>
<span class="line"><span>     IDLE              CONNECTING           LISTENING</span></span>
<span class="line"><span>  ┌─────────┐    唤醒词/按钮   ┌─────────┐  连接成功  ┌─────────┐</span></span>
<span class="line"><span>  │  空闲   │  ─────────────&gt; │  连接中  │ ────────&gt; │  聆听中  │</span></span>
<span class="line"><span>  │  待命   │                │  服务器  │           │  录音中  │</span></span>
<span class="line"><span>  └─────────┘                └─────────┘           └─────────┘</span></span>
<span class="line"><span>       ↑                           │                     │</span></span>
<span class="line"><span>       │                         连接失败                 │ 语音识别</span></span>
<span class="line"><span>       │                           │                     │ 完成/超时</span></span>
<span class="line"><span>       │                           ↓                     │</span></span>
<span class="line"><span>       │                     ┌─────────┐                 │</span></span>
<span class="line"><span>       └──── 播放完成/中断 ──── │  回复中  │ &lt;──────────────┘</span></span>
<span class="line"><span>                             │  AI说话  │</span></span>
<span class="line"><span>                             └─────────┘</span></span></code></pre></div><h3 id="状态指示说明" tabindex="-1">状态指示说明 <a class="header-anchor" href="#状态指示说明" aria-label="Permalink to &quot;状态指示说明&quot;">​</a></h3><p><strong>系统托盘图标颜色</strong>:</p><ul><li><strong>绿色</strong>: 系统正常运行，处于待命状态</li><li><strong>黄色</strong>: 正在聆听用户语音输入</li><li><strong>蓝色</strong>: AI正在语音回复中</li><li><strong>红色</strong>: 系统错误或连接异常</li><li><strong>灰色</strong>: 未连接到服务器</li></ul><h2 id="快捷键系统" tabindex="-1">快捷键系统 <a class="header-anchor" href="#快捷键系统" aria-label="Permalink to &quot;快捷键系统&quot;">​</a></h2><p>系统提供丰富的全局快捷键支持，详细说明请参考：<a href="./快捷键说明.html">快捷键说明</a></p><h3 id="常用快捷键" tabindex="-1">常用快捷键 <a class="header-anchor" href="#常用快捷键" aria-label="Permalink to &quot;常用快捷键&quot;">​</a></h3><table tabindex="0"><thead><tr><th>快捷键</th><th>功能描述</th><th>备注</th></tr></thead><tbody><tr><td><code>Ctrl+J</code></td><td>按住说话模式</td><td>按住期间录音，松开发送</td></tr><tr><td><code>Ctrl+K</code></td><td>自动对话模式</td><td>开启/关闭自动语音检测</td></tr><tr><td><code>Ctrl+Q</code></td><td>中断对话</td><td>立即停止AI回复</td></tr><tr><td><code>Ctrl+M</code></td><td>切换交互模式</td><td>在手动/自动模式间切换</td></tr><tr><td><code>Ctrl+W</code></td><td>显示/隐藏窗口</td><td>窗口最小化/还原</td></tr></tbody></table><h2 id="智能语音命令系统" tabindex="-1">智能语音命令系统 <a class="header-anchor" href="#智能语音命令系统" aria-label="Permalink to &quot;智能语音命令系统&quot;">​</a></h2><h3 id="基础交互命令" tabindex="-1">基础交互命令 <a class="header-anchor" href="#基础交互命令" aria-label="Permalink to &quot;基础交互命令&quot;">​</a></h3><ul><li><strong>问候语</strong>: &quot;你好&quot;、&quot;你是谁&quot;、&quot;早上好&quot;</li><li><strong>礼貌用语</strong>: &quot;谢谢&quot;、&quot;再见&quot;、&quot;请帮助我&quot;</li><li><strong>状态询问</strong>: &quot;系统状态如何&quot;、&quot;连接正常吗&quot;</li></ul><h3 id="视觉识别命令" tabindex="-1">视觉识别命令 <a class="header-anchor" href="#视觉识别命令" aria-label="Permalink to &quot;视觉识别命令&quot;">​</a></h3><p>集成GLM-4V多模态理解能力：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 视觉识别分析</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;识别画面&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # 分析当前摄像头画面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;看看摄像头前有什么&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 描述看到的内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;这是什么东西&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # 物体识别</span></span></code></pre></div><h3 id="mcp工具调用命令" tabindex="-1">MCP工具调用命令 <a class="header-anchor" href="#mcp工具调用命令" aria-label="Permalink to &quot;MCP工具调用命令&quot;">​</a></h3><p>利用丰富的MCP工具生态：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日历管理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;创建明天下午3点的会议提醒&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;查看今天的日程安排&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定时器功能  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;一分钟后播放菊花台&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 系统操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;查看系统信息&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;调节音量到80%&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 网络搜索</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;搜索今天的天气&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;查找最近热点&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 地图导航</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;查找附近的咖啡店&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;导航到北京天安门&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 美食菜谱</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;推荐今天晚餐菜谱&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;教我做宫保鸡丁&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 八字命理(可选)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;分析我的生辰八字&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;今天运势如何&quot;</span></span></code></pre></div><h2 id="运行模式与部署" tabindex="-1">运行模式与部署 <a class="header-anchor" href="#运行模式与部署" aria-label="Permalink to &quot;运行模式与部署&quot;">​</a></h2><h3 id="gui模式-默认" tabindex="-1">GUI模式 (默认) <a class="header-anchor" href="#gui模式-默认" aria-label="Permalink to &quot;GUI模式 (默认)&quot;">​</a></h3><p>图形用户界面模式，提供直观的交互体验：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 标准启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用MQTT协议</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --protocol</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mqtt</span></span></code></pre></div><p><strong>GUI模式特性</strong>:</p><ul><li>可视化操作界面</li><li>实时状态显示</li><li>音频波形可视化</li><li>系统托盘支持</li><li>图形化设置界面</li></ul><h3 id="cli模式" tabindex="-1">CLI模式 <a class="header-anchor" href="#cli模式" aria-label="Permalink to &quot;CLI模式&quot;">​</a></h3><p>命令行界面模式，适合服务器部署：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CLI模式启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CLI + MQTT协议</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --protocol</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mqtt</span></span></code></pre></div><p><strong>CLI模式特性</strong>:</p><ul><li>低资源占用</li><li>服务器友好</li><li>详细日志输出</li><li>键盘快捷键支持</li><li>脚本化部署</li></ul><p><strong>构建特性</strong>:</p><ul><li>跨平台支持</li><li>单文件模式</li><li>依赖打包</li><li>自动化配置</li></ul><h2 id="平台兼容性" tabindex="-1">平台兼容性 <a class="header-anchor" href="#平台兼容性" aria-label="Permalink to &quot;平台兼容性&quot;">​</a></h2><h3 id="windows-平台" tabindex="-1">Windows 平台 <a class="header-anchor" href="#windows-平台" aria-label="Permalink to &quot;Windows 平台&quot;">​</a></h3><ul><li><strong>完全兼容</strong>: 所有功能正常支持</li><li><strong>音频增强</strong>: 支持Windows音频API</li><li><strong>音量控制</strong>: 集成pycaw音量管理</li><li><strong>系统托盘</strong>: 完整托盘功能支持</li><li><strong>全局热键</strong>: 完整快捷键功能</li></ul><h3 id="macos-平台" tabindex="-1">macOS 平台 <a class="header-anchor" href="#macos-平台" aria-label="Permalink to &quot;macOS 平台&quot;">​</a></h3><ul><li><strong>完全兼容</strong>: 核心功能完整支持</li><li><strong>状态栏</strong>: 托盘图标显示在顶部状态栏</li><li><strong>权限管理</strong>: 可能需要授权麦克风/摄像头权限</li><li><strong>快捷键</strong>: 部分快捷键需要系统权限</li><li><strong>音频</strong>: 原生CoreAudio支持</li></ul><h3 id="linux-平台" tabindex="-1">Linux 平台 <a class="header-anchor" href="#linux-平台" aria-label="Permalink to &quot;Linux 平台&quot;">​</a></h3><ul><li><strong>兼容性</strong>: 支持主流发行版(Ubuntu/CentOS/Debian)</li><li><strong>桌面环境</strong>: <ul><li>GNOME: 完整支持</li><li>KDE: 完整支持</li><li>Xfce: 需要额外托盘支持</li></ul></li><li><strong>音频系统</strong>: <ul><li>PulseAudio: 推荐(自动检测)</li><li>ALSA: 备用方案</li></ul></li><li><strong>依赖</strong>: 可能需要安装系统托盘支持包</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian 托盘支持</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libappindicator3-1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CentOS/RHEL 托盘支持  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libappindicator-gtk3</span></span></code></pre></div><h2 id="故障排除指南" tabindex="-1">故障排除指南 <a class="header-anchor" href="#故障排除指南" aria-label="Permalink to &quot;故障排除指南&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><p><strong>1. 语音识别不工作</strong></p><ul><li>使用小美、小明等简易识别的唤醒词</li></ul><p><strong>2. 摄像头无法使用</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试摄像头</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/camera_scanner.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查摄像头权限和设备索引</span></span></code></pre></div><p><strong>3. 快捷键不响应</strong></p><ul><li>检查是否有其他程序占用相同快捷键</li><li>尝试以管理员权限运行(Windows)</li><li>检查系统安全软件拦截</li></ul><p><strong>4. 网络连接问题</strong></p><ul><li>检查防火墙设置</li><li>验证WebSocket/MQTT服务器地址</li><li>测试网络连通性</li></ul>`,78)]))}const u=i(p,[["render",e]]);export{c as __pageData,u as default};
